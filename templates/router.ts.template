import {
  createRouter,
  publicProcedure,
} from "../trpc";

import schema from '${schemas}/${name}Schema.ts';

export const ${name}Router = createRouter({
  create: publicProcedure
    .input(schema)
    .mutation(({ ctx, input }) => {
      return ctx.prisma.${name}.create({
        data: input,
      });
    }),
  update: publicProcedure
    .input(schema.extend({ id: z.string() }))
    .mutation(({ ctx, input }) => {
      return ctx.prisma.${name}.create({
        data: input,
      });
    }),
  all: publicProcedure.query(({ ctx }) => {
    return ctx.prisma.${name}.findMany();
  }),
  get: publicProcedure.input(z.string()).query(({ ctx, input }) => {
    return ctx.prisma.${name}.findUnique({ where: { id: input } });
  }),
  delete: publicProcedure.input(z.string()).mutation(({ ctx, input }) => {
    return ctx.prisma.${name}.delete({ where: { id: input.id } });
  }),
});
